ModPE.setItem(710,"stick",0,"ブロックを消す",1);
ModPE.setItem(711,"stick",0,"円を生成",1);
ModPE.setItem(712,"stick",0,"ブロックで埋める",1);
ModPE.setItem(713,"stick",0,"直線を生成",1);
ModPE.setItem(714,"stick",0,"枠を生成",1);
ModPE.setItem(715,"stick",0,"箱を生成",1);
ModPE.setItem(716,"stick",0,"球を生成(中を埋めない)",1);
ModPE.setItem(717,"stick",0,"球を生成(中を埋める)",1);
ModPE.setItem(718,"stick",0,"ブロック変換",1);
ModPE.setItem(719,"stick",0,"コピー",1);
ModPE.setItem(720,"stick",0,"ペースト",1);
ModPE.setItem(721,"stick",0,"ペースト横+90°",1);
ModPE.setItem(722,"stick",0,"ペースト横+180°",1);
ModPE.setItem(723,"stick",0,"ペースト横+270°",1);
ModPE.setItem(724,"stick",0,"ペーストXを軸に縦+90°",1);
ModPE.setItem(725,"stick",0,"ペーストZを軸に縦+90°",1);
ModPE.setItem(726,"stick",0,"ペースト縦+180°",1);
ModPE.setItem(727,"stick",0,"ペーストXを軸に縦+270°",1);
ModPE.setItem(728,"stick",0,"ペーストZを軸に縦+270°",1);
ModPE.setItem(729,"stick",0,"ペーストXを軸に線対称",1);
ModPE.setItem(730,"stick",0,"ペーストZを軸に線対称",1);
ModPE.setItem(731,"stick",0,"ブロックを積もらせる",1);
ModPE.setItem(732,"stick",0,"大木生成",1);
ModPE.setItem(733,"stick",0,"下まで埋める",1);
ModPE.setItem(734,"stick",0,"羊毛スキャン",1);
ModPE.setItem(735,"stick",0,"ブロック変換(空気として選択)",1);
ModPE.setItem(736,"stick",0,"表面にブロック設置",1);
ModPE.setItem(737,"stick",0,"十字生成",1);
ModPE.setItem(738,"stick",0,"空気に触れているブロックを置換",1);
ModPE.setItem(739,"stick",0,"円錐を生成",1);
ModPE.setItem(740,"stick",0,"塗りつぶし(範囲設定)",1);
ModPE.setItem(741,"stick",0,"塗りつぶし(実行)",1);
ModPE.setItem(742,"stick",0,"木を生やす",1);
ModPE.setItem(743,"stick",0,"斜めに埋める",1);
ModPE.setItem(744,"stick",0,"ランダムなブロックで埋める",1);
ModPE.setItem(745,"stick",0,"2倍にしてペースト",1);
ModPE.setItem(746,"stick",0,"途切れた直線を生成",1);
ModPE.setItem(747,"stick",0,"放物線を生成",1);
ModPE.setItem(748,"stick",0,"ランダムなブロックに置換",1);
var del=0;
var copy=0;
var change=0;
var ball=0;
var frame=0;
var box=0;
var fill=0;
var fill2=0;
var fill3=0;
var line=0;
var line2=0;
var line3=0;
var lineb=0;
var fall=0;
var scan=0;
var cross=0;
var yoyaku=[];
var cover=0;
var cover2=0;
var cone=0;
var circle=0;
var undo=[];
var x1=z1=x2=z2=false;
var che=0;
var levid=0;
var levda=0;
var stairs=[53,67,108,109,114,128,134,135,136,156,163,164];

function procCmd(cmd){
    if(cmd=="undo"){
        for(var i=undo.length-1;i>=0;i--){
            setTile(undo[i][0],undo[i][1],undo[i][2],undo[i][3],undo[i][4]);
        }
        clientMessage("undoを実行しました");
    }
    cm=cmd.split(" ");
    if(cm[0]=="frame"){
        mx=Math.floor(Player.getX());
        my=Math.floor(Player.getY())-1;
        mz=Math.floor(Player.getZ());
        frame=1;
        useItem(Math.floor(Player.getX())+parseInt(cm[1])-1,Math.floor(Player.getY())-1+parseInt(cm[2])-1,Math.floor(Player.getZ())+parseInt(cm[3])-1,714,parseInt(cm[4]),0,0,parseInt(cm[5]));
    }
}

function newLevel(){
    Player.addItemCreativeInv(710,1,0);
    Player.addItemCreativeInv(711,1,0);
    Player.addItemCreativeInv(712,1,0);
    Player.addItemCreativeInv(713,1,0);
    Player.addItemCreativeInv(714,1,0);
    Player.addItemCreativeInv(715,1,0);
    Player.addItemCreativeInv(716,1,0);
    Player.addItemCreativeInv(717,1,0);
    Player.addItemCreativeInv(718,1,0);
    Player.addItemCreativeInv(719,1,0);
    Player.addItemCreativeInv(720,1,0);
    Player.addItemCreativeInv(721,1,0);
    Player.addItemCreativeInv(722,1,0);
    Player.addItemCreativeInv(723,1,0);
    Player.addItemCreativeInv(724,1,0);
    Player.addItemCreativeInv(725,1,0);
    Player.addItemCreativeInv(726,1,0);
    Player.addItemCreativeInv(727,1,0);
    Player.addItemCreativeInv(728,1,0);
    Player.addItemCreativeInv(729,1,0);
    Player.addItemCreativeInv(730,1,0);
    Player.addItemCreativeInv(731,1,0);
    Player.addItemCreativeInv(732,1,0);
    Player.addItemCreativeInv(733,1,0);
    Player.addItemCreativeInv(734,1,0);
    Player.addItemCreativeInv(735,1,0);
    Player.addItemCreativeInv(736,1,0);
    Player.addItemCreativeInv(737,1,0);
    Player.addItemCreativeInv(738,1,0);
    Player.addItemCreativeInv(739,1,0);
    Player.addItemCreativeInv(740,1,0);
    Player.addItemCreativeInv(741,1,0);
    Player.addItemCreativeInv(742,1,0);
    Player.addItemCreativeInv(743,1,0);
    Player.addItemCreativeInv(744,1,0);
    Player.addItemCreativeInv(745,1,0);
    Player.addItemCreativeInv(746,1,0);
    Player.addItemCreativeInv(747,1,0);
    Player.addItemCreativeInv(748,1,0);
    clientMessage("WorldEditorV4M083は正常にインポートされました");
    clientMessage(" /undo コマンドで操作を取り消すことができます");
    clientMessage("雪玉を投げると球が生成されます");
    clientMessage("卵を投げると球状にブロックを削除します");
    clientMessage("スニーク中にブロックを壊すとそのブロックを手に持ちます");
    clientMessage("スニーク中に専用ツールでタップすると手前のブロックを参照します");
    clientMessage("[/frame x y z id data]で指定サイズの枠を生成します");
}

var blocks=[];

function destroyBlock(x,y,z,side){
    if(Entity.isSneaking(Player.getEntity())){
        Entity.setCarriedItem(Player.getEntity(),getTile(x,y,z),64,Level.getData(x,y,z));
    }
    if(getCarriedItem()==742){
        levid=getTile(x,y,z);
        levda=Level.getData(x,y,z);
        clientMessage("葉のブロックを設定しました");
        preventDefault();
    }
}

function createWood(x,y,z,bi,bd,c){
    for(xx=x-1;xx<=x+1;xx++){
        for(yy=y-1;yy<=y+1;yy++){
            for(zz=z-1;zz<=z+1;zz++){
                undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                setTile(xx,yy,zz,bi,bd);
            }
        }
    }
    if(c!=8)createWood(x+Math.floor(Math.random()*3)-1,y+3,z+Math.floor(Math.random()*3)-1,bi,bd,c+1);
}

function addWood(x,y,z,i,d,c,l){
    undo.push([x,y,z,getTile(x,y,z),Level.getData(x,y,z)]);
    undo.push([x,y-1,z,getTile(x,y-1,z),Level.getData(x,y-1,z)]);
    undo.push([x,y+1,z,getTile(x,y+1,z),Level.getData(x,y+1,z)]);
    undo.push([x-1,y,z,getTile(x-1,y,z),Level.getData(x-1,y,z)]);
    undo.push([x+1,y,z,getTile(x+1,y,z),Level.getData(x+1,y,z)]);
    undo.push([x,y,z-1,getTile(x,y,z-1),Level.getData(x,y,z-1)]);
    undo.push([x,y,z+1,getTile(x,y,z+1),Level.getData(x,y,z+1)]);
    setTile(x-1,y,z,i,d);
    setTile(x,y,z,i,d);
    setTile(x+1,y,z,i,d);
    setTile(x,y,z-1,i,d);
    setTile(x,y,z+1,i,d);
    setTile(x,y-1,z,i,d);
    setTile(x,y+1,z,i,d);
    if(c!=l){
        (Math.floor(Math.random()*2)==1)?addWood(x+Math.floor(Math.random()*3)-1,y+1,z,i,d,c+1,l):addWood(x,y+1,z+Math.floor(Math.random()*3)-1,i,d,c+1,l);
    }else{
        last=[x,y,z];
    }
}

function useItem(x,y,z,itemId,blockId,side,itemData,blockData){
    if(Entity.isSneaking(Player.getEntity())){
        switch(side){
            case 0:
                var blockId=getTile(x,y-1,z);
                var blockData=Level.getData(x,y-1,z);
                var y=y-1;
                break;
            case 1:
                var blockId=getTile(x,y+1,z);
                var blockData=Level.getData(x,y+1,z);
                var y=y+1;
                break;
            case 2:
                var blockId=getTile(x,y,z-1);
                var blockData=Level.getData(x,y,z-1);
                var z=z-1;
                break;
            case 3:
                var blockId=getTile(x,y,z+1);
                var blockData=Level.getData(x,y,z+1);
                var z=z+1;
                break;
            case 4:
                var blockId=getTile(x-1,y,z);
                var blockData=Level.getData(x-1,y,z);
                var x=x-1;
                break;
            case 5:
                var blockId=getTile(x+1,y,z);
                var blockData=Level.getData(x+1,y,z);
                var x=x+1;
                break;
        }
    }
    clientMessage("X:"+x+"\nY:"+y+"\nZ:"+z+"\nID:"+blockId+"\nData:"+blockData);
    if(itemId==710){
        if(del==0){
            mx=x;
            my=y;
            mz=z;
            del=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            del=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        if(Level.getTile(xx,yy,zz)!=0){
                            undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                            setTile(xx,yy,zz,0);
                        }
                    }
                }
            }
            clientMessage("削除しました");
        }
    }
    if(itemId==711){
        if(circle==0){
            mx=x;
            my=y;
            mz=z;
            circle=1;
            clientMessage("原点を設定しました\n同じアイテムで半径の基準となる点を設定してください");
        }else{
            undo=[];
            circle=0;
            size=Math.sqrt(Math.pow(mx-x+0.5,2)+Math.pow(my-y+0.5,2)+Math.pow(mz-z+0.5,2));
            if(my==y){
                for(an=0;an<=2*size*Math.PI;an++){
                    ann=an*360/(2*Math.PI*size);
                    undo.push([mx+size*Math.sin(ann/180*Math.PI),my,mz-size*Math.cos(ann/180*Math.PI),getTile(mx+size*Math.sin(ann/180*Math.PI),my,mz-size*Math.cos(ann/180*Math.PI)),Level.getData(mx+size*Math.sin(ann/180*Math.PI),my,mz-size*Math.cos(ann/180*Math.PI))]);
                    setTile(mx+size*Math.sin(ann/180*Math.PI),my,mz-size*Math.cos(ann/180*Math.PI),blockId,blockData);
                }
            }else{
                var yyy=getRot(mx,mz,x,z);
                for(an=0;an<=2*size*Math.PI;an++){
                    ann=an*360/(2*Math.PI*size);
                    setTile(mx+size*Math.sin(yyy/180*Math.PI)*Math.cos((ann-180)/180*Math.PI),my+size*Math.sin((ann-180)/180*Math.PI),mz-size*Math.cos(yyy/180*Math.PI)*Math.cos((ann-180)/180*Math.PI),blockId,blockData);
                }
            }
            clientMessage("円を生成しました");
        }
    }
    if(itemId==712){
        if(fill==0){
            mx=x;
            my=y;
            mz=z;
            fill=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            fill=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                        setTile(xx,yy,zz,blockId,blockData);
                    }
                }
            }
            clientMessage("範囲内を埋めました");
        }
    }
    if(itemId==713){
        if(line==0){
            mx=x;
            my=y;
            mz=z;
            line=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            line=0;
            nx=x;
            ny=y;
            nz=z;
            addLine(x,y,z,mx,my,mz,nx,ny,nz,blockId,blockData);
            clientMessage("直線を生成しました");
            line=0;
        }
    }
    if(itemId==714){
        if(frame==0){
            mx=x;
            my=y;
            mz=z;
            frame=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            frame=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                undo.push([xx,miy,miz,getTile(xx,miy,miz),Level.getData(xx,miy,miz)]);
                undo.push([xx,may,miz,getTile(xx,may,miz),Level.getData(xx,may,miz)]);
                undo.push([xx,miy,maz,getTile(xx,miy,maz),Level.getData(xx,miy,maz)]);
                undo.push([xx,miy,miz,getTile(xx,may,maz),Level.getData(xx,may,maz)]);
                setTile(xx,miy,miz,blockId,blockData);
                setTile(xx,may,miz,blockId,blockData);
                setTile(xx,miy,maz,blockId,blockData);
                setTile(xx,may,maz,blockId,blockData);
            }
            for(yy=miy;yy<=may;yy++){
                undo.push([mix,yy,miz,getTile(mix,yy,miz),Level.getData(mix,yy,miz)]);
                undo.push([max,yy,maz,getTile(max,yy,maz),Level.getData(max,yy,maz)]);
                undo.push([max,yy,miz,getTile(max,yy,miz),Level.getData(max,yy,miz)]);
                undo.push([mix,yy,maz,getTile(mix,yy,maz),Level.getData(mix,yy,maz)]);
                setTile(mix,yy,miz,blockId,blockData);
                setTile(max,yy,miz,blockId,blockData);
                setTile(mix,yy,maz,blockId,blockData);
                setTile(max,yy,maz,blockId,blockData);
            }
            for(zz=miz;zz<=maz;zz++){
                undo.push([mix,miy,zz,getTile(mix,miy,zz),Level.getData(mix,miy,zz)]);
                undo.push([max,miy,zz,getTile(max,miy,zz),Level.getData(max,miy,zz)]);
                undo.push([mix,may,zz,getTile(mix,may,zz),Level.getData(mix,may,zz)]);
                undo.push([max,may,zz,getTile(max,may,zz),Level.getData(max,may,zz)]);
                setTile(mix,miy,zz,blockId,blockData);
                setTile(mix,may,zz,blockId,blockData);
                setTile(max,miy,zz,blockId,blockData);
                setTile(max,may,zz,blockId,blockData);
            }
            clientMessage("枠を生成しました");
        }
    }
    if(itemId==715){
        if(box==0){
            mx=x;
            my=y;
            mz=z;
            box=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            box=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    undo.push([xx,yy,miz,getTile(xx,yy,miz),Level.getData(xx,yy,miz)]);
                    setTile(xx,yy,miz,blockId,blockData);
                    undo.push([xx,yy,maz,getTile(xx,yy,maz),Level.getData(xx,yy,maz)]);
                    setTile(xx,yy,maz,blockId,blockData);
                }
            }
            for(yy=miy;yy<=may;yy++){
                for(zz=miz;zz<=maz;zz++){
                    undo.push([mix,yy,zz,getTile(mix,yy,zz),Level.getData(mix,yy,zz)]);
                    setTile(mix,yy,zz,blockId,blockData);
                    undo.push([max,yy,zz,getTile(max,yy,zz),Level.getData(max,yy,zz)]);
                    setTile(max,yy,zz,blockId,blockData);
                }
            }
            for(xx=mix;xx<=max;xx++){
                for(zz=miz;zz<=maz;zz++){
                    undo.push([xx,miy,zz,getTile(xx,miy,zz),Level.getData(xx,miy,zz)]);
                    setTile(xx,miy,zz,blockId,blockData);
                    undo.push([xx,may,zz,getTile(xx,may,zz),Level.getData(xx,may,zz)]);
                    setTile(xx,may,zz,blockId,blockData);
                }
            }
            clientMessage("箱を生成しました");
        }
    }
    if(itemId==716){
        if(ball==0){
            mx=x+0.5;
            my=y+0.5;
            mz=z+0.5;
            ball=1;
            clientMessage("原点を設定しました\n同じアイテムで半径の基準となる点を設定してください");
        }else{
            undo=[];
            ball=0;
            size=Math.ceil(Math.sqrt(Math.pow(mx-x+0.5,2)+Math.pow(my-y+0.5,2)+Math.pow(mz-z+0.5,2)));
            for(bn=0;bn<=2*size*Math.PI;bn++){
                for(an=0;an<=2*size*Math.PI;an++){
                    ann=an*360/(2*Math.PI*size);
                    bnn=bn*360/(2*Math.PI*size);
                    undo.push([mx+size*Math.sin(ann/180*Math.PI)* Math.cos((bnn-180)/ 180 * Math.PI),my+size*Math.sin((bnn-180)/180*Math.PI),mz-size*Math.cos(ann/180*Math.PI)* Math.cos((bnn-180) / 180 * Math.PI),getTile(mx+size*Math.sin(ann/180*Math.PI)* Math.cos((bnn-180)/ 180 * Math.PI),my+size*Math.sin((bnn-180)/180*Math.PI),mz-size*Math.cos(ann/180*Math.PI)* Math.cos((bnn-180) / 180 * Math.PI)),Level.getData(mx+size*Math.sin(ann/180*Math.PI)* Math.cos((bnn-180)/ 180 * Math.PI),my+size*Math.sin((bnn-180)/180*Math.PI),mz-size*Math.cos(ann/180*Math.PI)* Math.cos((bnn-180) / 180 * Math.PI))]);
                    setTile(mx+size*Math.sin(ann/180*Math.PI)* Math.cos((bnn-180)/ 180 * Math.PI),my+size*Math.sin((bnn-180)/180*Math.PI),mz-size*Math.cos(ann/180*Math.PI)* Math.cos((bnn-180) / 180 * Math.PI),blockId,blockData);
                }
            }
            clientMessage("球を生成しました");
        }
    }
    if(itemId==717){
        if(ball==0){
            mx=x+0.5;
            my=y+0.5;
            mz=z+0.5;
            ball=1;
            clientMessage("原点を設定しました\n同じアイテムで半径の基準となる点を設定してください");
        }else{
            undo=[];
            ball=0;
            size=Math.sqrt(Math.pow(mx-x+0.5,2)+Math.pow(my-y+0.5,2)+Math.pow(mz-z+0.5,2));
            for(nx=mx-size;nx<=mx+size;nx++){
                for(ny=my-size;ny<=my+size;ny++){
                    for(nz=mz-size;nz<=mz+size;nz++){
                        if(Math.pow(mx-nx,2)+Math.pow(my-ny,2)+Math.pow(mz-nz,2)<=Math.pow(size,2)){
                            undo.push([nx,ny,nz,getTile(nx,ny,nz),Level.getData(nx,ny,nz)]);
                            setTile(nx,ny,nz,blockId,blockData);
                        }
                    }
                }
            }
            clientMessage("球を生成しました");
        }
    }
    if(itemId==718){
        if(change==0){
            mx=x;
            my=y;
            mz=z;
            change=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
            delid=blockId;
            delda=blockData;
        }else{
            undo=[];
            change=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        if(getTile(xx,yy,zz)==delid&&Level.getData(xx,yy,zz)==delda){
                            undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                            setTile(xx,yy,zz,blockId,blockData);
                        }
                    }
                }
            }
            clientMessage("範囲内のブロックを置換しました");
        }
    }
    if(itemId==719){
        if(copy==0){
            mx=x;
            my=y;
            mz=z;
            copy=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            copy=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            blocks=[];
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        id=Level.getTile(xx,yy,zz);
                        dat=Level.getData(xx,yy,zz);
                        if(id!=0)blocks.push([xx-mix,yy-miy,zz-miz,id,dat]);
                    }
                }
            }
            clientMessage("コピーしました\nペーストでタップしたところに貼り付けられます");
        }
    }
    if(itemId==720){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x+blocks[re][0],y+blocks[re][1],z+blocks[re][2],getTile(x+blocks[re][0],y+blocks[re][1],z+blocks[re][2]),Level.getData(x+blocks[re][0],y+blocks[re][1],z+blocks[re][2])]);
            setTile(x+blocks[re][0],y+blocks[re][1],z+blocks[re][2],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==721){
        undo=[];
        for(re=0;re<blocks.length;re++){
            dm=blocks[re][4];
            if(stairs.indexOf(blocks[re][3])!=-1){
                switch(dm%4){
                    case 0:dm+=2;
                        break;
                    case 2:dm-=1;
                        break;
                    case 1:dm+=2;
                        break;
                    case 3:dm-=3;
                        break;
                }
            }
            if(blocks[re][3]==17){
                if(dm>=4&&dm<=13){
                    (dm<8)?dm+=4:dm-=4;
                }
            }
            undo.push([x-blocks[re][2],y+blocks[re][1],z+blocks[re][0],getTile(x-blocks[re][2],y+blocks[re][1],z+blocks[re][0]),Level.getData(x-blocks[re][2],y+blocks[re][1],z+blocks[re][0])]);
            setTile(x-blocks[re][2],y+blocks[re][1],z+blocks[re][0],blocks[re][3],dm);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==722){
        undo=[];
        for(re=0;re<blocks.length;re++){
            dm=blocks[re][4];
            //2-8,1-4
            if(stairs.indexOf(blocks[re][3])!=-1){
                switch(dm%2){
                    case 1:dm--;
                        break;
                    case 0:dm++;
                        break;
                }
            }
            if(blocks[re][3]==106){
                undo=[];
                if(dm==1){
                    dm=4;
                }else if(dm==4){
                    dm=1;
                }else if(dm==2){
                    dm=8;
                }else if(dm==8){
                    dm=2;
                }
            }
            undo.push([x-blocks[re][0],y+blocks[re][1],z-blocks[re][2],getTile(x-blocks[re][0],y+blocks[re][1],z-blocks[re][2]),Level.getData(x-blocks[re][0],y+blocks[re][1],z-blocks[re][2])]);
            setTile(x-blocks[re][0],y+blocks[re][1],z-blocks[re][2],blocks[re][3],dm);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==723){
        undo=[];
        for(re=0;re<blocks.length;re++){
            dm=blocks[re][4];
            if(stairs.indexOf(blocks[re][3])!=-1){
                switch(dm%4){
                    case 0:dm+=3;
                        break;
                    case 3:dm-=2;
                        break;
                    case 1:dm+=1;
                        break;
                    case 2:dm-=2;
                        break;
                }
            }
            if(blocks[re][3]==17){
                if(dm>=4&&dm<=13){
                    (dm<8)?dm+=4:dm-=4;
                }
            }
            undo.push([x+blocks[re][2],y+blocks[re][1],z-blocks[re][0],getTile(x+blocks[re][2],y+blocks[re][1],z-blocks[re][0]),Level.getData(x+blocks[re][2],y+blocks[re][1],z-blocks[re][0])]);
            setTile(x+blocks[re][2],y+blocks[re][1],z-blocks[re][0],blocks[re][3],dm);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==724){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x+blocks[re][0],y+blocks[re][2],z+blocks[re][1],getTile(x+blocks[re][0],y+blocks[re][2],z+blocks[re][1]),Level.getData(x+blocks[re][0],y+blocks[re][2],z+blocks[re][1])]);
            setTile(x+blocks[re][0],y+blocks[re][2],z+blocks[re][1],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==725){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x+blocks[re][1],y+blocks[re][0],z+blocks[re][2],getTile(x+blocks[re][1],y+blocks[re][0],z+blocks[re][2]),Level.getData(x+blocks[re][1],y+blocks[re][0],z+blocks[re][2])]);
            setTile(x+blocks[re][1],y+blocks[re][0],z+blocks[re][2],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==726){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x+blocks[re][0],y-blocks[re][1],z+blocks[re][2],getTile(x+blocks[re][0],y-blocks[re][1],z+blocks[re][2]),Level.getData(x+blocks[re][0],y-blocks[re][1],z+blocks[re][2])]);
            setTile(x+blocks[re][0],y-blocks[re][1],z+blocks[re][2],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==727){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x+blocks[re][0],y+blocks[re][2],z-blocks[re][1],getTile(x+blocks[re][0],y+blocks[re][2],z-blocks[re][1]),Level.getData(x+blocks[re][0],y+blocks[re][2],z-blocks[re][1])]);
            setTile(x+blocks[re][0],y+blocks[re][2],z-blocks[re][1],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==728){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x-blocks[re][1],y+blocks[re][0],z+blocks[re][2],getTile(x-blocks[re][1],y+blocks[re][0],z+blocks[re][2]),Level.getData(x-blocks[re][1],y+blocks[re][0],z+blocks[re][2])]);
            setTile(x-blocks[re][1],y+blocks[re][0],z+blocks[re][2],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==729){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x+blocks[re][0],y+blocks[re][1],z-blocks[re][2],getTile(x+blocks[re][0],y+blocks[re][1],z-blocks[re][2]),Level.getData(x+blocks[re][0],y+blocks[re][1],z-blocks[re][2])]);
            setTile(x+blocks[re][0],y+blocks[re][1],z-blocks[re][2],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==730){
        undo=[];
        for(re=0;re<blocks.length;re++){
            undo.push([x-blocks[re][0],y+blocks[re][1],z+blocks[re][2],getTile(x-blocks[re][0],y+blocks[re][1],z+blocks[re][2]),Level.getData(x-blocks[re][0],y+blocks[re][1],z+blocks[re][2])]);
            setTile(x-blocks[re][0],y+blocks[re][1],z+blocks[re][2],blocks[re][3],blocks[re][4]);
        }
        clientMessage("貼り付けました");
    }
    if(itemId==731){
        if(fall==0){
            mx=x;
            mz=z;
            fall=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            fall=0;
            nx=x;
            nz=z;
            mix=Math.min(mx,nx);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miz=Math.min(mz,nz);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                for(zz=miz;zz<=maz;zz++){
                    a=0;
                    while(true){
                        a++;
                        if(getTile(xx,y-a,zz)!=0){
                            undo.push([xx,y-a+1,zz,getTile(xx,y-a+1,zz),Level.getData(xx,y-a+1,zz)]);
                            setTile(xx,y-a+1,zz,blockId,blockData);
                            break;
                        }
                        if(y-a==0)break;
                    }
                }
            }
            clientMessage("範囲内にブロックを積もらせました");
        }
    }
    if(itemId==732){
        undo=[];
        createWood(x,y+1,z,blockId,blockData,0);
    }
    if(itemId==733){
        a=0;
        undo=[];
        while(true){
            a++;
            if(getTile(x,y-a,z)==0){
                undo.push([x,y-a,z,getTile(x,y-a,z),Level.getData(x,y-a,z)]);
                setTile(x,y-a,z,blockId,blockData);
            }else{
                break;
            }
        }
    }
    if(itemId==734){
        if(scan==0){
            mx=x;
            my=y;
            mz=z;
            scan=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            scan=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            clientMessage("サイズ\nX:"+(max-mix+1)+"Y:"+(may-miy+1)+"Z:"+(maz-miz+1));
            w=0;
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        if(Level.getTile(xx,yy,zz)==35)w++;
                    }
                }
            }
            clientMessage("羊毛数:"+w);
        }
    }
    if(itemId==735){
        if(change==0){
            mx=x;
            my=y;
            mz=z;
            change=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
            delid=0;
            delda=0;
        }else{
            undo=[];
            change=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        if(getTile(xx,yy,zz)==delid&&Level.getData(xx,yy,zz)==delda){
                            undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                            setTile(xx,yy,zz,0,0);
                        }
                    }
                }
            }
            clientMessage("範囲内のブロックを置換しました");
        }
    }
    if(itemId==736){
        if(cover==0){
            mx=x;
            my=y;
            mz=z;
            cover=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            cover=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            yoyaku=[];
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        if(Level.getTile(xx,yy,zz)==0&&(Level.getTile(xx+1,yy,zz)!=0||Level.getTile(xx,yy,zz-1)!=0||Level.getTile(xx-1,yy,zz)!=0||Level.getTile(xx,yy+1,zz)!=0||Level.getTile(xx,yy-1,zz)!=0||Level.getTile(xx,yy,zz+1)!=0)){
                            undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                            yoyaku.push([xx,yy,zz]);
                        }
                    }
                }
            }
            for(var as=0;as<yoyaku.length;as++){
                setTile(yoyaku[as][0],yoyaku[as][1],yoyaku[as][2],blockId,blockData);
            }
            clientMessage("表面にブロックを貼り付けました");
        }
    }
    if(itemId==737){
        if(cross==0){
            mx=x;
            my=y;
            mz=z;
            cross=1;
            clientMessage("原点を設定しました\n同じアイテムで半径の基準となる点を設定してください");
        }else{
            undo=[];
            cross=0;
            size=Math.sqrt(Math.pow(mx-x,2)+Math.pow(my-y,2)+Math.pow(mz-z,2));
            for(nx=mx-size;nx<=mx+size;nx++){
                undo.push([nx,my,mz,getTile(nx,my,mz),Level.getData(nx,my,mz)]);
                setTile(nx,my,mz,blockId,blockData);
            }
            for(ny=my-size;ny<=my+size;ny++){
                undo.push([mx,ny,mz,getTile(mx,ny,mz),Level.getData(mx,ny,mz)]);
                setTile(mx,ny,mz,blockId,blockData);
            }
            for(nz=mz-size;nz<=mz+size;nz++){
                undo.push([mx,my,nz,getTile(mx,my,nz),Level.getData(mx,my,nz)]);
                setTile(mx,my,nz,blockId,blockData);
            }
            clientMessage("十字を生成しました");
        }
    }
    if(itemId==738){
        if(cover2==0){
            mx=x;
            my=y;
            mz=z;
            cover2=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            cover2=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            for(xx=mix;xx<=max;xx++){
                for(yy=miy;yy<=may;yy++){
                    for(zz=miz;zz<=maz;zz++){
                        if(Level.getTile(xx,yy,zz)!=0&&(Level.getTile(xx-1,yy,zz)==0||Level.getTile(xx+1,yy,zz)==0||Level.getTile(xx,yy-1,zz)==0||Level.getTile(xx,yy+1,zz)==0||Level.getTile(xx,yy,zz-1)==0||Level.getTile(xx,yy,zz+1)==0)){
                            undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                            setTile(xx,yy,zz,blockId,blockData);
                        }
                    }
                }
            }
            clientMessage("露出してるブロックのみ置換しました");
        }
    }
    if(itemId==739){
        if(cone==0){
            mx=x;
            my=y;
            mz=z;
            cone=1;
            clientMessage("頂点を設定しました\n同じアイテムで底面の半径の基準となる点を設定してください");
        }else{
            undo=[];
            cone=0;
            xd=(mx-x)/(my-y);
            zd=(mz-z)/(my-y);
            for(ny=0;ny<=my-y;ny++){
                hankei=Math.sqrt(Math.pow((mx-x)-ny*xd,2)+Math.pow((mz-z)-ny*zd,2));
                for(an=0;an<=2*hankei*Math.PI;an++){
                    ann=an*360/(2*Math.PI*hankei);
                    xx=-hankei*Math.sin(ann/180*Math.PI);
                    zz=hankei*Math.cos(ann/180*Math.PI);
                    undo.push([mx+xx,y+ny,mz+zz,getTile(mx+xx,y+ny,mz+zz),Level.getData(mx+xx,y+ny,mz+zz)]);
                    setTile(mx+xx,y+ny,mz+zz,blockId,blockData);
                }
            }
            clientMessage("円錐を生成しました");
        }
    }
    if(itemId==740){
        switch(che){
            case 0:
                x1=x;
                z1=z;
                che=1;
                clientMessage("座標1を設定しました");
                break;
            case 1:
                x2=x;
                z2=z;
                che=2;
                clientMessage("座標2を設定しました");
                break;
            case 2:
                x1=y1=z1=x2=y2=z2=false;
                che=0;
                clientMessage("座標を未選択状態にリセットしました");
                break;
        }
    }
    if(itemId==741){
        if(che==2){
            minx=Math.min(x1,x2);
            minz=Math.min(z1,z2);
            maxx=Math.max(x1,x2);
            maxz=Math.max(z1,z2);
            umeru(x+1,y,z,blockId,blockData);
            umeru(x-1,y,z,blockId,blockData);
            umeru(x,y,z+1,blockId,blockData);
            umeru(x,y,z-1,blockId,blockData);
            clientMessage("範囲内を塗りつぶしました");
            x1=z1=x2=z2=false;
            clientMessage("座標を未選択状態にリセットしました");
            che=0;
            preventDefault();
        }else{
            clientMessage("座標が2点設定されていません");
        }
    }
    if(itemId==742){
        if(levid!=0){
            undo=[];
            undo.push([x,y,z,getTile(x,y,z),Level.getData(x,y,z)]);
            setTile(x,y,z,0);
            var y2=Math.floor(Math.random()*3)+4;
            var roots=Math.floor(Math.random()*3)+4;
            for(var s1=0;s1<=roots;s1++){
                var ran_x=Math.floor(Math.random()*13)-6;
                var ran_z=Math.floor(Math.random()*13)-6;
                addLine(x,y+y2,z,x+ran_x,y,z+ran_z,x,y+y2,z,blockId,blockData);
                addLine(x,y+y2,z,x+ran_x-1,y,z+ran_z,x,y+y2,z,blockId,blockData);
                addLine(x,y+y2,z,x+ran_x+1,y,z+ran_z,x,y+y2,z,blockId,blockData);
                addLine(x,y+y2,z,x+ran_x,y,z+ran_z-1,x,y+y2,z,blockId,blockData);
                addLine(x,y+y2,z,x+ran_x,y,z+ran_z+1,x,y+y2,z,blockId,blockData);
            }
            addWood(x,y+y2,z,blockId,blockData,0,Math.floor(Math.random()*4)+8);
            var le=Math.floor(Math.random()*4)+10;
            for(var ll=0;ll<=le;ll++){
                var rx=Math.floor(Math.random()*13)-6;
                var ry=Math.floor(Math.random()*8)-2;
                var rz=Math.floor(Math.random()*13)-6;
                addLeaves(last[0]+rx,last[1]+ry,last[2]+rz,levid,levda);
                addLine(last[0],last[1],last[2],last[0]+rx,last[1]+ry,last[2]+rz,last[0],last[1],last[2],blockId,blockData);
            }
        }else{
            clientMessage("葉が指定されていません\nこのアイテムで葉となるブロックを壊してください");
        }
    }
    if(itemId==743){
        if(fill2==0){
            mx=x;
            my=y;
            mz=z;
            fill2=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            fill2=0;
            nx=x;
            ny=y;
            nz=z;
            mix=Math.min(mx,nx);
            miy=Math.min(my,ny);
            miz=Math.min(mz,nz);
            max=Math.max(mx,nx);
            may=Math.max(my,ny);
            maz=Math.max(mz,nz);
            nacx=(max-mix)/(max+maz-mix-miz);
            nacz=(maz-miz)/(max+maz-mix-miz);
            mr=Math.abs(may-miy+0.5);
            mrx=mr/(max-mix)*nacx;
            mrz=mr/(maz-miz)*nacz;
            if(may==ny){
                hx=nx;
                hy=ny;
                hz=nz;
                lx=mx;
                ly=my;
                lz=mz;
            }else{
                hx=mx;
                hy=my;
                hz=mz;
                lx=nx;
                ly=ny;
                lz=nz;
            }
            for(xx=mix;xx<=max;xx++){
                for(zz=miz;zz<=maz;zz++){
                    undo.push([xx,miy+Math.abs(xx-lx)*mrx+Math.abs(zz-lz)*mrz,zz,getTile(xx,miy+Math.abs(xx-lx)*mrx+Math.abs(zz-lz)*mrz,zz),Level.getData(xx,miy+Math.abs(xx-lx)*mrx+Math.abs(zz-lz)*mrz,zz)]);
                    setTile(xx,miy+Math.abs(xx-lx)*mrx+Math.abs(zz-lz)*mrz,zz,blockId,blockData);
                }
            }
            clientMessage("範囲内を斜めに埋めました");
        }
    }
    if(itemId==744){
        if(fill3==0){
            mx=x;
            my=y;
            mz=z;
            fill3=1;
            clientMessage("始点を設定しました\n終点にidを書き込んだ看板を設置し、このアイテムでタッチしてください\n例:\n1:0,5:1");
        }else{
            if(getTile(x,y,z)==63||getTile(x,y,z)==68){
                nums=[];
                nu=[];
                l=0;
                while(l<=3){
                    if(Level.getSignText(x,y,z,l)!="")nu=nu.concat(Level.getSignText(x,y,z,l).split(","));
                    l++;
                }
                for(var u=0;u<nu.length;u++){
                    nums.push([nu[u].split(":")[0],nu[u].split(":")[1]]);
                }
                undo=[];
                fill3=0;
                nx=x;
                ny=y;
                nz=z;
                mix=Math.min(mx,nx);
                miy=Math.min(my,ny);
                miz=Math.min(mz,nz);
                max=Math.max(mx,nx);
                mix=Math.min(mx,nx);
                miy=Math.min(my,ny);
                miz=Math.min(mz,nz);
                may=Math.max(my,ny);
                maz=Math.max(mz,nz);
                for(xx=mix;xx<=max;xx++){
                    for(yy=miy;yy<=may;yy++){
                        for(zz=miz;zz<=maz;zz++){
                            undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                            ran=Math.floor(Math.random()*nums.length);
                            setTile(xx,yy,zz,parseInt(nums[ran][0]),parseInt(nums[ran][1]));
                        }
                    }
                }
                clientMessage("範囲内を指定したブロックで埋めました");
            }
        }
    }
    if(itemId==745){
        undo=[];
        for(re=0;re<blocks.length;re++){
            for(var a=0;a<=1;a++){
                for(var b=0;b<=1;b++){
                    for(var c=0;c<=1;c++){
                        undo.push([x+blocks[re][0]*2+a,y+blocks[re][1]*2+b,z+blocks[re][2]*2+c,getTile(x+blocks[re][0]*2+a,y+blocks[re][1]*2+b,z+blocks[re][2]*2+c),Level.getData(x+blocks[re][0]*2+a,y+blocks[re][1]*2+b,z+blocks[re][2]*2+c)]);
                        setTile(x+blocks[re][0]*2+a,y+blocks[re][1]*2+b,z+blocks[re][2]*2+c,blocks[re][3],blocks[re][4]);
                    }
                }
            }
        }
        clientMessage("貼り付けました");
    }
    if(itemId==746){
        if(line2==0){
            if(getTile(x,y,z)==63||getTile(x,y,z)==68){
                l=0;
                lineb=0;
                while(l<=3){
                    if(isFinite(Level.getSignText(x,y,z,l))){
                        lineb=Level.getSignText(x,y,z,l);
                        break;
                    }
                    l++;
                }
            }else{
                clientMessage("§4Error:始点は数値を書き込んだ看板で指定してください");
            }
            if(lineb==0){
                clientMessage("§4Error:始点は数値を書き込んだ看板で指定してください");
            }else{
                mx=x;
                my=y;
                mz=z;
                line2=1;
                clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
            }
        }else{
            undo=[];
            line2=0;
            nx=x;
            ny=y;
            nz=z;
            addLine2(x,y,z,mx,my,mz,nx,ny,nz,blockId,blockData,lineb);
            clientMessage("直線を生成しました");
            line=0;
        }
    }
    if(itemId==747){
        if(line3==0){
            mx=x;
            my=y;
            mz=z;
            line3=1;
            clientMessage("始点を設定しました\n同じアイテムで終点を設定してください");
        }else{
            undo=[];
            line3=0;
            nx=x;
            ny=y;
            nz=z;
            may=Math.max(ny,my);
            if(may==ny){
                hx=nx;
                hy=ny;
                hz=nz;
                lx=mx;
                ly=my;
                lz=mz;
            }else{
                hx=mx;
                hy=my;
                hz=mz;
                lx=nx;
                ly=ny;
                lz=nz;
            }
            addBBP(lx,ly,lz,hx,hy,hz,blockId,blockData);
            clientMessage("放物線を生成しました");
            line3=0;
        }
    }
    if(itemId==748){
        if(fill3==0){
            mx=x;
            my=y;
            mz=z;
            id=blockId;
            data=blockData;
            fill3=1;
            clientMessage("始点を設定しました\n終点にidを書き込んだ看板を設置し、このアイテムでタッチしてください\n例:\n1:0,5:1");
        }else{
            if(getTile(x,y,z)==63||getTile(x,y,z)==68){
                nums=[];
                nu=[];
                l=0;
                while(l<=3){
                    if(Level.getSignText(x,y,z,l)!="")nu=nu.concat(Level.getSignText(x,y,z,l).split(","));
                    l++;
                }
                for(var u=0;u<nu.length;u++){
                    nums.push([nu[u].split(":")[0],nu[u].split(":")[1]]);
                }
                undo=[];
                fill3=0;
                nx=x;
                ny=y;
                nz=z;
                mix=Math.min(mx,nx);
                miy=Math.min(my,ny);
                miz=Math.min(mz,nz);
                max=Math.max(mx,nx);
                mix=Math.min(mx,nx);
                miy=Math.min(my,ny);
                miz=Math.min(mz,nz);
                may=Math.max(my,ny);
                maz=Math.max(mz,nz);
                for(xx=mix;xx<=max;xx++){
                    for(yy=miy;yy<=may;yy++){
                        for(zz=miz;zz<=maz;zz++){
                            if(getTile(xx,yy,zz)==id&&Level.getData(xx,yy,zz)==data){
                                undo.push([xx,yy,zz,getTile(xx,yy,zz),Level.getData(xx,yy,zz)]);
                                ran=Math.floor(Math.random()*nums.length);
                                setTile(xx,yy,zz,parseInt(nums[ran][0]),parseInt(nums[ran][1]));
                            }
                        }
                    }
                }
                clientMessage("範囲内を指定したブロックで埋めました");
            }
        }
    }
}

function projectileHitBlockHook(entity,x,y,z,side){
    if(Entity.getEntityTypeId(entity)==81){
        size=Math.floor(Math.random()*320)/100+1;
        undo=[];
        for(nx=x-size;nx<=x+size;nx++){
            for(ny=y-size;ny<=y+size;ny++){
                for(nz=z-size;nz<=z+size;nz++){
                    if(Math.pow(x-nx,2)+Math.pow(y-ny,2)+Math.pow(z-nz,2)<=Math.pow(size,2)){
                        undo.push([nx,ny,nz,getTile(nx,ny,nz),Level.getData(nx,ny,nz)]);
                        setTile(nx,ny,nz,getTile(x,y,z),Level.getData(x,y,z));
                    }
                }
            }
        }
    }
    if(Entity.getEntityTypeId(entity)==82){
        size=Math.floor(Math.random()*320)/100+1;
        undo=[];
        for(nx=x-size;nx<=x+size;nx++){
            for(ny=y-size;ny<=y+size;ny++){
                for(nz=z-size;nz<=z+size;nz++){
                    if(Math.pow(x-nx,2)+Math.pow(y-ny,2)+Math.pow(z-nz,2)<=Math.pow(size,2)){
                        undo.push([nx,ny,nz,getTile(nx,ny,nz),Level.getData(nx,ny,nz)]);
                        setTile(nx,ny,nz,0,0);
                    }
                }
            }
        }
        preventDefault();
    }
}

function umeru(x,y,z,id,dm){
    if(getTile(x,y,z)==0&&y>=0&&x>=minx&&x<=maxx&&z>=minz&&z<=maxz){
        undo.push([x,y,z,getTile(x,y,z),Level.getData(x,y,z)]);
        setTile(x,y,z,id,dm);
        umeru(x+1,y,z,id,dm);
        umeru(x-1,y,z,id,dm);
        umeru(x,y,z+1,id,dm);
        umeru(x,y,z-1,id,dm);
    }
}

function addLine(x,y,z,mx,my,mz,nx,ny,nz,blockId,blockData){
    maxdist=Math.max(Math.abs(mx-nx),Math.abs(my-ny),Math.abs(mz-nz));
    xdist=(mx-nx)/maxdist;
    ydist=(my-ny)/maxdist;
    zdist=(mz-nz)/maxdist;
    for(times=0;times<=maxdist;times++){
        undo.push([Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times),getTile(Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times)),Level.getData(Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times))]);
        setTile(Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times),blockId,blockData);
    }
}

function addLine2(x,y,z,mx,my,mz,nx,ny,nz,blockId,blockData,lb){
    maxdist=Math.max(Math.abs(mx-nx),Math.abs(my-ny),Math.abs(mz-nz));
    xdist=(mx-nx)/maxdist;
    ydist=(my-ny)/maxdist;
    zdist=(mz-nz)/maxdist;
    for(times=0;times<=maxdist;times++){
        if(times%lb==0){
            undo.push([Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times),getTile(Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times)),Level.getData(Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times))]);
            setTile(Math.round(x+xdist*times),Math.round(y+ydist*times),Math.round(z+zdist*times),blockId,blockData);
        }
    }
}

function addLeaves(x,y,z,i,d){
    size=Math.floor(Math.random()*180)/100+2;
    for(nx=x-size;nx<=x+size;nx++){
        for(ny=y-size;ny<=y+size;ny++){
            for(nz=z-size;nz<=z+size;nz++){
                if(Math.pow(x-nx,2)+Math.pow(y-ny,2)+Math.pow(z-nz,2)<=Math.pow(size,2)){
                    if(getTile(nx,ny,nz)==0){
                        undo.push([nx,ny,nz,getTile(nx,ny,nz),Level.getData(nx,ny,nz)]);
                        setTile(nx,ny,nz,i,d);
                    }
                }
            }
        }
    }
}

function getRot(x1,z1,x2,z2){
    yaw=Math.atan((x2-x1)/(-z2+z1))*180/Math.PI;
    if((-z2+z1)/Math.abs(-z2+z1)==1){
        yaw=yaw+180;
    }
    //pitch=-1*Math.tan((y2-y1)/Math.sqrt(Math.pow(x2-x1,2)+Math.pow(z2-z1,2)))*180/Math.PI;
    return(yaw);
}

function addBBP(nx,ny,nz,px,py,pz,id,data){
    var d=Math.sqrt(Math.pow(nx-px,2)+Math.pow(nz-pz,2));
    t=-1+Math.sqrt(1+4*(2*(py-ny)/9.8))/2*5
    xe=(nx-px)/t;
    ze=(nz-pz)/t;
    for(ts=0;ts<=d;ts+=t/d){
        setTile(Math.floor(px+xe*ts),Math.floor(py+(4.9* ts - 4.9*Math.pow(ts,2))/18),Math.floor(pz+ze*ts),id,data);
    }
}